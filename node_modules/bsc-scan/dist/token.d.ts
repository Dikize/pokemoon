import { RequestConfig } from './query';
declare function getTokenSupplyByContractAddress(contractAddress: string, requestConfig?: RequestConfig): Promise<string | import("axios").AxiosResponse<{
    status: "0" | "1";
    message: string;
    result: string;
}>>;
declare function getCirculatingSupplyByContractAddress(contractAddress: string, requestConfig?: RequestConfig): Promise<string | import("axios").AxiosResponse<{
    status: "0" | "1";
    message: string;
    result: string;
}>>;
declare function getAccountBalanceForTokenContractAddress(address: string, contractAddress: string, requestConfig?: RequestConfig): Promise<string | import("axios").AxiosResponse<{
    status: "0" | "1";
    message: string;
    result: string;
}>>;
declare function getHistoricalAccountBalanceForTokenContractAddress(address: string, contractAddress: string, blockno: number, requestConfig?: RequestConfig): Promise<string | import("axios").AxiosResponse<{
    status: "0" | "1";
    message: string;
    result: string;
}>>;
declare const _default: {
    getTokenSupplyByContractAddress: typeof getTokenSupplyByContractAddress;
    getCirculatingSupplyByContractAddress: typeof getCirculatingSupplyByContractAddress;
    getAccountBalanceForTokenContractAddress: typeof getAccountBalanceForTokenContractAddress;
    getHistoricalAccountBalanceForTokenContractAddress: typeof getHistoricalAccountBalanceForTokenContractAddress;
};
export default _default;
//# sourceMappingURL=token.d.ts.map