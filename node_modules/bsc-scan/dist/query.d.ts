import { AxiosRequestConfig } from 'axios';
declare type Module = 'account' | 'contract' | 'stats';
declare type AccountAction = 'balance' | 'balancemulti' | 'txlist' | 'txlistinternal' | 'tokentx' | 'getminedblocks';
declare type ContractAction = 'getabi' | 'getsourcecode';
declare type StatsAction = 'tokensupply' | 'tokenCsupply' | 'tokenbalance' | 'tokenbalancehistory' | 'bnbsupply' | 'validators';
export declare type QueryParams = {
    module: Module;
    action: AccountAction | ContractAction | StatsAction;
    address?: string;
    contractAddress?: string;
    txhash?: string;
    startBlock?: number;
    endBlock?: number;
    blockno?: number;
    page?: number;
    offset?: number;
    sort?: 'asc' | 'desc';
    tag?: string;
    apiKey?: string;
};
export declare type RequestConfig = {
    axiosConfig?: AxiosRequestConfig;
    rawAxiosResponse?: boolean;
};
declare type Response<T> = {
    status: '0' | '1';
    message: string;
    result: T;
};
declare function query<T>(queryOptions: QueryParams, requestConfig?: RequestConfig): Promise<T | import("axios").AxiosResponse<Response<T>>>;
export default query;
//# sourceMappingURL=query.d.ts.map